#! /bin/bash

### BEGIN INIT INFO
# Provides:  kafka
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: kafka service
### END INIT INFO

NAME="kafka"

STARTCMD="/opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties"
STOPCMD="/opt/kafka/bin/kafka-server-stop.sh"
PIDFILE="/var/run/$NAME.pid"
LOGFILE="/var/log/$NAME.log"

recursiveKill() { # Recursively kill a process and all subprocesses
  CPIDS=$(pgrep -P $1);
  for PID in $CPIDS
  do
    recursiveKill $PID
  done
  sleep 3 && kill -9 $1 2>/dev/null & # hard kill after 3 seconds
  kill $1 2>/dev/null # try soft kill first
}

function start {
  echo "Starting $NAME ..."
  if [ -f "$PIDFILE" ]; then
    echo "Already running according to $PIDFILE"
    exit 1
  else
    /bin/su -m -c "$STARTCMD" > $LOGFILE 2>&1 &
    PID=$!
    echo $PID > $PIDFILE
    echo "Started $NAME with pid $PID - Logging to $LOGFILE"
  fi
}

function stop {
  echo "Stopping $NAME ..."
  if [ ! -f $PIDFILE ]; then
    echo "Already stopped!"
  else
    # PID=`cat $PIDFILE`
    # recursiveKill $PID
    /bin/su -m -c "$STOPCMD"
    rm -f $PIDFILE
    echo "Stopped $NAME"
  fi
}

function status {
  if [ -f "$PIDFILE" ]; then
    PID=`cat $PIDFILE`
    if [ "$(/bin/ps --no-headers -p $PID)" ]; then
      echo "$NAME is running (pid : $PID)"
    else
      echo "Pid $PID found in $PIDFILE, but not running."
    fi
  else
    echo "$NAME is NOT running"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    $0 stop
    sleep 3
    $0 start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: /etc/init.d/kafka {start|stop|restart|status}" && exit 1
    ;;
esac