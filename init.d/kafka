#! /bin/bash

### BEGIN INIT INFO
# Provides:  kafka
# Required-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: kafka service
### END INIT INFO

NAME="kafka"
USER="kafka"

LOG_DIR="/var/log/$NAME"

SERVER_PROPERTIES="/opt/kafka/config/server.properties"
KAFKA_LOG_DIR=$(cat ${SERVER_PROPERTIES} | grep '^log.dirs' | cut -f2 -d= | cut -f1 -d,)
LOCK_FILE="${KAFKA_LOG_DIR}/.lock"

START_CMD="LOG_DIR=${LOG_DIR} /opt/kafka/bin/kafka-server-start.sh -daemon ${SERVER_PROPERTIES}"
STOP_CMD="/opt/kafka/bin/kafka-server-stop.sh"

function start {
  echo "Using config: ${SERVER_PROPERTIES}"
  echo "Logging to: ${LOG_DIR}"
  printf "Starting $NAME ... "

  if [[ ! -e $LOG_DIR ]]; then
    mkdir $LOG_DIR
    chown -hR kafka. $LOG_DIR
  fi
  PIDS=$(ps ax | grep -i 'kafka\.Kafka' | grep java | grep -v grep | awk '{print $1}')
  if [ -n "$PIDS" ]; then
    echo "already running as process $PIDS"
    exit 1
  else
    /bin/su -s /bin/sh -l $USER -c "$START_CMD" &
    echo "STARTED"
  fi
}

function stop {
  printf "Stopping $NAME ... "

  # copy from /opt/kafka/bin/kafka-server-stop.sh
  PIDS=$(ps ax | grep -i 'kafka\.Kafka' | grep java | grep -v grep | awk '{print $1}')
  if [ -z "$PIDS" ]; then
    echo "no kafka server to stop"
    exit 1
  else
    /bin/su -s /bin/sh -l $USER -c "$STOP_CMD" &
    while ps -p $PIDS > /dev/null; do sleep 1; done
    rm -f $LOCK_FILE
    echo "STOPPED"
  fi
}

function status {
  PIDS=$(ps ax | grep -i 'kafka\.Kafka' | grep java | grep -v grep | awk '{print $1}')
  if [ -n "$PIDS" ]; then
    echo "$NAME is running"
  elif [ -f "$LOCK_FILE" ]; then
    echo "$NAME is not running, but lock file found in $LOCK_FILE"
  else
    echo "$NAME is not running"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    $0 stop
    sleep 3
    $0 start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: /etc/init.d/kafka {start|stop|restart|status}" && exit 1
    ;;
esac